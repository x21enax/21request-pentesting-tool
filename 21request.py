#!/usr/bin/env python3

import argparse
import requests
import signal
import sys
from datetime import datetime
import getpass
from urllib.parse import urljoin
class bcolors:
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    RED = '\033[91m'

L1=(" :'#######:::::'##:::'########::'########::'#######::'##::::'##:'########::'######::'########:")
L2=(" '##.... ##::'####::: ##.... ##: ##.....::'##.... ##: ##:::: ##: ##.....::'##... ##:... ##..::")
L3=(" ..::::: ##::.. ##::: ##:::: ##: ##::::::: ##:::: ##: ##:::: ##: ##::::::: ##:::..::::: ##::::")
L4=(" :'#######::::: ##::: ########:: ######::: ##:::: ##: ##:::: ##: ######:::. ######::::: ##::::")
L5=(" '##::::::::::: ##::: ##.. ##::: ##...:::: ##:'## ##: ##:::: ##: ##...:::::..... ##:::: ##::::")
L6=("  ##::::::::::: ##::: ##::. ##:: ##::::::: ##:.. ##:: ##:::: ##: ##:::::::'##::: ##:::: ##::::")
L7=("  #########::'######: ##:::. ##: ########:: ##### ##:. #######:: ########:. ######::::: ##::::")
L8=(" .........:::......::..:::::..::........:::.....:..:::.......:::........:::......::::::..:::::")
L9=(" X21Empire - @x21empire - @x21e0day - Abyssinia-Hackers")
L10=("መንግሥተ ኢትዮጵያ በዛሬዎቹ ኢትዮጵያና ኤርትራ የሚገኝ መንግሥት ነበር። በትልቅነቱ ጊዜ ሰሜን ሶማሊያ፣ ጅቡቲ፣ ደቡብ ግብፅ፣ ምሥራቃዊ ሱዳን፣ የመንና ምዕራባዊ ሳውዲ አረቢያን ያጠቃልል ነበር።")

print(bcolors.GREEN + L1)
print(bcolors.GREEN + L2)
print(bcolors.GREEN + L3)
print(bcolors.GREEN + L4)
print(bcolors.RED + L5)
print(bcolors.RED + L6)
print(bcolors.RED + L7)
print(bcolors.RED + L8)
print(bcolors.GREEN + L9)
print(bcolors.GREEN + L10)




username = getpass.getuser()

import time
import os

def print_slowly(text):
    for char in text:
        print(char, end='', flush=True)
        time.sleep(0.05)  

def check_first_run():
    if not os.path.exists("first_run.txt"):
       
        text = """
The Kingdom of Abyssinia was founded in the 13th century CE and, transforming itself into the Ethiopian Empire via a series of military conquests, lasted until the 20th century CE. It was established by the kings of the Solomonid dynasty who, claiming descent from no less a figure than the Bible's King Solomon, would rule in an unbroken line throughout the state's long history. A Christian kingdom which spread the faith via military conquest and the establishment of churches and monasteries, its greatest threat came from the Muslim trading states of East Africa and southern Arabia and the migration of the Oromo people from the south. The combination of its rich Christian heritage, the cult of its emperors, and the geographical obstacles presented to invaders meant that the Ethiopian Empire would be one of only two African states never to be formally colonised by a European power.
"""
        amtext = """
የኢትዮጵያ ደጋማ አካባቢዎች አስተማማኝ አመታዊ የዝናብ ዝናብ እና ለም አፈር ከድንጋይ ዘመን ጀምሮ በተሳካ ሁኔታ መኖር ችሏል። ግብርና እና ንግድ ከግብፅ፣ ከደቡብ አረቢያ እና ከሌሎች የአፍሪካ ህዝቦች ጋር በ1ኛው ክፍለ ዘመን የተመሰረተው የአክሱም (እንዲሁም አክሱም) ኃያል መንግሥት መነሳት አረጋግጧል። ከ 3 ኛው እስከ 6 ኛው ክፍለ ዘመን እዘአ ያበቀለ እና ከዚያም በ 8 ኛው ክፍለ ዘመን ከክርስቶስ ልደት በኋላ በጣም ትንሽ የሆነ የፖለቲካ አካል ሆኖ የተረፈው የአክሱም መንግስት ከሰሃራ በታች ያለ የመጀመሪያው አፍሪካዊ መንግስት ክርስትናን በይፋ የተቀበለ፣ ሐ. 350 ዓ.ም. አክሱም የራሷ የሆነ የግእዝ ፊደል ፈጠረች ይህም ዛሬም በኢትዮጵያ ጥቅም ላይ ውሏል።"""
        print_slowly(text + amtext)
        with open("first_run.txt", "w") as f:
            f.write("1")

check_first_run()

print("\n\nTo learn more about the Kingdom of Abyssinia, visit: https://www.worldhistory.org/Kingdom_of_Abyssinia/")

def check_website(url):
    try:
        response = requests.get(url)
        if response.status_code == 200:
            print(f"Hey {username}, It's Work: {url}")
        else:
            print(f"Sorry {username}, It's Not Work: {url}")
    except requests.exceptions.RequestException as e:
        print(f"Sorry {username}, It's Not Work: {url}")

def discover_subdomains(target, wordlist):
    try:
        with open(wordlist) as file:
            content = file.read()
            subdomains = content.splitlines()

        for subdomain in subdomains:
            url = f"http://{subdomain}.{target}"
            try:
                requests.get(url)
                response = requests.get(url)
            except requests.ConnectionError:
                pass
            else:
                now = datetime.now()
                current_time = now.strftime("%Y-%m-%d %H:%M:%S")
                print(f"*{response.status_code}* [{current_time}] [Length: {len(response.content)}] [+] Discovered subdomain:", url)
    except Exception as e:
        print("Error:", e)
        print("Please contact us: x21e0day@zohomail.com")

def discover_directories(target, wordlist):
    try:
        with open(wordlist) as file:
            content = file.read()
            directories = content.splitlines()

        for directory in directories:
            url = f"http://{target}/{directory}"
            try:
                response = requests.get(url)
                if response.status_code != 404:
                    now = datetime.now()
                    current_time = now.strftime("%Y-%m-%d %H:%M:%S")
                    print(f"*{response.status_code}* [{current_time}] [+] Found directory: {url} [Length: {len(response.content)}]")
            except requests.exceptions.RequestException:
                pass
    except Exception as e:
        print("Error:", e)
        print("Please contact us: x21e0day@zohomail.com")

def handle_interrupt(signum, frame):
    if signum == signal.SIGINT:
        print(f"21request stopped by {username}")
        sys.exit(0)
    elif signum == signal.SIGTSTP:
        print(f"21request suspended by {username}")
        sys.exit(0)

signal.signal(signal.SIGINT, handle_interrupt)
signal.signal(signal.SIGTSTP, handle_interrupt)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Check website status, discover subdomains, and find directories')
    parser.add_argument('target', help='Target host or IP address')
    parser.add_argument('-s', '--subdomain', action='store_true', help='Discover subdomains')
    parser.add_argument('-d', '--directory', action='store_true', help='Find directories')
    parser.add_argument('-w', '--wordlist', help='Custom wordlist file')

    args = parser.parse_args()

    subdomain_wordlist = '21request_sub_small.txt' if args.wordlist is None and args.subdomain else args.wordlist

    directory_wordlist = '21request_dic_small.txt' if args.wordlist is None and args.directory else args.wordlist

    if args.subdomain:
        discover_subdomains(args.target, subdomain_wordlist)
    elif args.directory:
        discover_directories(args.target, directory_wordlist)
    else:
        check_website(args.target)